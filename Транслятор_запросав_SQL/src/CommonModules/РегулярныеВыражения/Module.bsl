
Функция ПроверитьСтроку(Строка, Фасет) Экспорт
	Чтение = Новый ЧтениеXML;
	Чтение.УстановитьСтроку(
	"<Model xmlns=""http://v8.1c.ru/8.1/xdto"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:type=""Model"">
	|<package targetNamespace=""sample-my-package"">
	|<valueType name=""testtypes"" base=""xs:string"">
	|<pattern>" + Фасет + "</pattern>
	|</valueType>
	|<objectType name=""TestObj"">
	|<property xmlns:d4p1=""sample-my-package"" name=""TestItem"" type=""d4p1:testtypes""/>
	|</objectType>
	|</package>
	|</Model>");
	
	Модель = ФабрикаXDTO.ПрочитатьXML(Чтение);
	МояФабрикаXDTO = Новый ФабрикаXDTO(Модель);
	Пакет = МояФабрикаXDTO.Пакеты.Получить("sample-my-package");
	Тест = МояФабрикаXDTO.Создать(Пакет.Получить("TestObj"));
	
	Попытка
		Тест.TestItem = Строка;
		Возврат Истина
	Исключение
		Возврат Ложь
	КонецПопытки;
	
КонецФункции

#Область RegExp

Функция RegExp(Шаблон, Текст, Global = Ложь, MultiLine = Ложь, IgnoreCase = Истина) Экспорт
	Перем RegExp;
	
	Если RegExp = Неопределено Тогда //Нужна инициализация
		RegExp = Новый COMОбъект("VBScript.RegExp");    // создаем объект для работы с регулярными выражениями
	КонецЕсли;
	
	//Заполняем данные
	RegExp.MultiLine = MultiLine;                  // истина — текст многострочный, ложь — одна строка
	RegExp.Global = Не Global;   // истина — поиск по всей строке, ложь — до первого совпадения
	RegExp.IgnoreCase = IgnoreCase;        // истина — игнорировать регистр строки при поиске
	RegExp.Pattern = Шаблон;                        // шаблон (регулярное выражение)
	
	РезультатАнализаСтроки = RegExp.Execute(Текст);
	
	МассивВыражений = Новый Массив;
	Для Каждого Выражение Из РезультатАнализаСтроки Цикл
		СтруктураВыражение = Новый Структура ("Начало, Длина, Значение, ПодВыражения", Выражение.FirstIndex, Выражение.Length, Выражение.Value);
		
		//Обработка подвыражений
		МассивПодВыражений = Новый Массив;
		Для Каждого ПодВыражение Из Выражение.SubMatches Цикл
			МассивПодВыражений.Добавить(ПодВыражение);
		КонецЦикла;
		СтруктураВыражение.ПодВыражения = МассивПодВыражений;
		
		МассивВыражений.Добавить(СтруктураВыражение);
	КонецЦикла; 
	
	Если МассивВыражений.Количество() > 0 Тогда
		Возврат МассивВыражений[0].Значение;
	КонецЕсли;
	
	Возврат "";
КонецФункции

#КонецОбласти     

#Область ОбработкаТекста  
Функция ОчиститьСтрокуSQL(Знач Текст) Экспорт  
	Текст= СтрЗаменить(Текст, "dbo", "");
	Текст= СтрЗаменить(Текст, "[", "");
	Текст= СтрЗаменить(Текст, "]", "");
	Текст= СтрЗаменить(Текст, ".", "");
	Текст= СокрЛП(Текст);  
	
	Возврат Текст;
КонецФункции   

Функция ВыделитьВТSQL(Знач Текст) Экспорт  
	Текст= СтрЗаменить(Текст, "as", "");
	Текст= СтрЗаменить(Текст, "AS", "");
	Текст= СокрЛП(Текст);  

	Возврат Текст;
КонецФункции

#КонецОбласти  