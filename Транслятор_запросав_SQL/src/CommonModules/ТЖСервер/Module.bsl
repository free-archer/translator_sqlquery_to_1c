Процедура ПрочитатьТЖ(ФайлТЖ, Замер) Экспорт
	Попытка
		ЗаписьЖурналаРегистрации("ЧтениеЖурналаРегистрации.ЧтениеНачато");
		ИмяВрФайла = ПолучитьИмяВременногоФайла("log");

		Шаблон= "(\w+)\.log$";
		мСтрок= РегулярныеВыражения.RegExpSubMatches(Шаблон, ФайлТЖ);
		Если мСтрок.Количество() = 0 Тогда
			Сообщить("Не удалось прочитать дату из файл");
			Возврат;
		КонецЕсли;
		
		ИмяФайлаТЖ= мСтрок[0][0];
		 
		Год = Число(Лев(ИмяФайлаТЖ, 2));
		Месяц = Число(Сред(ИмяФайлаТЖ, 3, 2));
		День = Число(Сред(ИмяФайлаТЖ, 5, 2));
		Час = Число(Прав(ИмяФайлаТЖ, 2));
		ДатаФайла = Дата(Год + 2000, Месяц, День, Час, 0, 0);

		ЗамерОбъект= Замер.ПолучитьОбъект();
		ЗамерОбъект.ДатаФайла= ДатаФайла;
		ЗамерОбъект.Записать();

		КопироватьФайл(ФайлТЖ, ИмяВрФайла);
					
		РазобратьФайл(ИмяВрФайла, Замер, ДатаФайла);

		УдалитьФайлы(ИмяВрФайла);
	Исключение
		ЗаписьЖурналаРегистрации("ЧтениеЖурналаРегистрации.ЧтениеПрервано");
		ВызватьИсключение;
	КонецПопытки;

	ЗаписьЖурналаРегистрации("ЧтениеЖурналаРегистрации.ЧтениеЗавершено");
КонецПроцедуры // ПрочитатьЖурнал 

Процедура РазобратьФайл(ИмяФайлаДляРазбора, Замер, ДатаФайла)
	Текст = Новый ЧтениеТекста(ИмяФайлаДляРазбора, КодировкаТекста.UTF8, Символы.ВК + Символы.ПС, "", Ложь);
	СтрокаТекста = Текст.ПрочитатьСтроку();
	Анализатор = Новый COMОбъект("VBScript.RegExp");
	Анализатор.Global = Истина;
	Анализатор.Pattern = "([0-9]{2}):([0-9]{2})\.([0-9]+)\-([0-9]+)\,(\w+)\,(\d+)";
	АнализаторСвойств = Новый COMОбъект("VBScript.RegExp");
	АнализаторСвойств.Global = Истина;
	АнализаторСвойств.Pattern = ",([A-Za-z0-9_А-Яа-я:]+)=([^,]+)";
	АнализаторКавычек = Новый COMОбъект("VBScript.RegExp");
	АнализаторКавычек.Global = Истина;

	КэшСобытий = Новый Соответствие;
	КэшСвойств = Новый Соответствие;
	КэшПроцессов = Новый Соответствие;

	НаборЗаписейЖурнала = РегистрыСведений.Журнал.СоздатьНаборЗаписей();
	НаборЗаписейЖурнала.Отбор.Замер.Значение = Замер;
	НаборЗаписейЖурнала.Прочитать();
	НаборЗаписейЖурнала.Очистить();

	НаборЗаписейСвойств = РегистрыСведений.СвойстваСобытия.СоздатьНаборЗаписей();
	НаборЗаписейСвойств.Отбор.Замер.Значение = Замер;
	НаборЗаписейСвойств.Прочитать();
	НаборЗаписейСвойств.Очистить();

	БылаЗаписьНабора = Ложь;
	ПрочитаноРазмер = 0;
	ПрочитаноСтрок = 0;
	РазобраноСтрок = 0;

	Пока СтрокаТекста <> Неопределено Цикл

		ПрочитаноРазмер = ПрочитаноРазмер + СтрДлина(СтрокаТекста);
		ПрочитаноСтрок = ПрочитаноСтрок + 1;
		
		// Проверяем, является ли следующая строка начальной строкой журнала
		СледующаяСтрока = Текст.ПрочитатьСтроку();
		Если СледующаяСтрока <> Неопределено Тогда
			Совпадения = Анализатор.Execute(СледующаяСтрока);
			Если Совпадения.Count() = 0 Тогда
				// если следующая строка не соответствует шаблону - добавляем ее к текущей строке и пытаемся распознать объединенную часть
				СтрокаТекста = СтрокаТекста + СледующаяСтрока;
				Продолжить;
			КонецЕсли;
		КонецЕсли;

		Совпадения = Анализатор.Execute(СтрокаТекста);
		Если Совпадения.Count() = 1 Тогда
			Совпадение = Совпадения.Item(0);
			Минуты = Число(Совпадение.SubMatches.Item(0));
			Секунды = Число(Совпадение.SubMatches.Item(1));
			ДолиСекунды = Число(Совпадение.SubMatches.Item(2));
			Длительность = Число(Совпадение.SubMatches.Item(3));
			ИмяСобытия = Совпадение.SubMatches.Item(4);
			УровеньСобытия = Совпадение.SubMatches.Item(5);
			ПериодСобытия = ДатаФайла + Секунды + (Минуты * 60);
		Иначе
			ВызватьИсключение "Нет соответствия шаблону! " + СтрокаТекста;
		КонецЕсли;
		Запись = НаборЗаписейЖурнала.Добавить();
		Запись.ПериодСобытия = ПериодСобытия;
		Запись.ДоляПериода = Число(ДолиСекунды);
		Запись.Событие = ПолучитьСобытие(ИмяСобытия, КэшСобытий);
		Запись.Уровень = Число(УровеньСобытия);
		Запись.Длительность = Число(Длительность);
		Запись.ДлительностьСек = Запись.Длительность / 1000000;

		КлючСобытия = Новый УникальныйИдентификатор;
		Запись.КлючСобытия = КлючСобытия;

		СтрокаСвойств = СтрокаТекста;
		ПараметрыСвертки = Новый Структура;
		СвернутьКавычки(АнализаторКавычек, СтрокаСвойств, ПараметрыСвертки);
		Совпадения = АнализаторСвойств.Execute(СтрокаСвойств);
		Если Совпадения.Count() <> 0 Тогда
			
			// Масив имен свойств, необходим для устранения странного бага: иногда в ТЖ встречаются в одной строке два одинаковых свойства
			МассивСвойств = Новый Массив;

			Для Сч = 0 По Совпадения.Count() - 1 Цикл
				Совпадение = Совпадения.Item(Сч);
				ИмяСвойства = Совпадение.SubMatches.Item(0);
				Если МассивСвойств.Найти(ИмяСвойства) = Неопределено Тогда
					ЗначениеСвойства = Совпадение.SubMatches.Item(1);
					РазвернутьКавычки(АнализаторКавычек, ЗначениеСвойства, ПараметрыСвертки);
					ЗаписьСвойства = НаборЗаписейСвойств.Добавить();
					ЗаписьСвойства.КлючСобытия = КлючСобытия;
					ЗаписьСвойства.Свойство = ПолучитьСвойство(ИмяСвойства, КэшСвойств);
					ЗаписьСвойства.ЗначениеСвойства = ЗначениеСвойства;
					МассивСвойств.Добавить(ИмяСвойства);
				КонецЕсли;
			КонецЦикла;

		КонецЕсли;

		СтрокаТекста = СледующаяСтрока;
		РазобраноСтрок = РазобраноСтрок + 1;
	КонецЦикла;

	НаборЗаписейЖурнала.Записать(Истина);
	НаборЗаписейСвойств.Записать(Истина);

	Текст.Закрыть();

	Сообщить(РазобраноСтрок);
КонецПроцедуры

Функция ПолучитьСобытие(ИмяСобытия, КэшСобытий)
	Результат = КэшСобытий[ИмяСобытия];
	Если Результат <> Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	Результат = Справочники.События.НайтиПоНаименованию(ИмяСобытия, Истина);
	Если Результат = Неопределено Или Результат.Пустая() Тогда
		СобытиеОбъект = Справочники.События.СоздатьЭлемент();
		СобытиеОбъект.Наименование = ИмяСобытия;
		СобытиеОбъект.Записать();
		Результат = СобытиеОбъект.Ссылка;
	КонецЕсли;
	КэшСобытий.Вставить(ИмяСобытия, Результат);
	Возврат Результат;
КонецФункции

Функция ПолучитьСвойство(ИмяСвойства, КэшСвойств)
	Результат = КэшСвойств[ИмяСвойства];
	Если Результат <> Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	Результат = Справочники.Свойства.НайтиПоНаименованию(ИмяСвойства, Истина);
	Если Результат = Неопределено Или Результат.Пустая() Тогда
		СпрОбъект = Справочники.Свойства.СоздатьЭлемент();
		СпрОбъект.Наименование = ИмяСвойства;
		СпрОбъект.Записать();
		Результат = СпрОбъект.Ссылка;
	КонецЕсли;
	КэшСвойств.Вставить(ИмяСвойства, Результат);
	Возврат Результат;
КонецФункции


#Область Вспомогательные
Процедура СвернутьКавычки(Анализатор, Строка, Параметры)
	Анализатор.Global = Истина;
	Анализатор.Pattern = """[^""]*""";
	Совпадения = Анализатор.Execute(Строка);
	Для Сч = 0 По Совпадения.Count - 1 Цикл
		Совпадение = Совпадения.Item(Сч);
		СтрокаПоиска = Совпадение.Value;
		ИмяПараметра = "Параметр_" + Сч;
		Строка = СтрЗаменить(Строка, СтрокаПоиска, "[" + ИмяПараметра + "]");
		Параметры.Вставить(ИмяПараметра, СтрокаПоиска);
	КонецЦикла;
	Анализатор.Pattern = "'[^']*'";
	Совпадения = Анализатор.Execute(Строка);
	Для Сч = 0 По Совпадения.Count - 1 Цикл
		Совпадение = Совпадения.Item(Сч);
		СтрокаПоиска = Совпадение.Value;
		ИмяПараметра = "Параметр__" + Сч;
		Строка = СтрЗаменить(Строка, СтрокаПоиска, "[" + ИмяПараметра + "]");
		Параметры.Вставить(ИмяПараметра, СтрокаПоиска);
	КонецЦикла;
КонецПроцедуры

Процедура РазвернутьКавычки(Анализатор, Строка, Параметры)
	Анализатор.Pattern = "\[(Параметр(_|__)\d+)\]";
	Совпадения = Анализатор.Execute(Строка);
	Для Сч = 0 По Совпадения.Count - 1 Цикл
		Совпадение = Совпадения.Item(Сч);
		ИмяПараметра = Совпадение.Submatches.Item(0);
		Развертка = Параметры[ИмяПараметра];
		Строка = СтрЗаменить(Строка, "[" + ИмяПараметра + "]", Развертка);
	КонецЦикла;
КонецПроцедуры
#КонецОбласти